{
    "pipes": [],
    "interfaces": [
        {
            "name": "Review",
            "id": "interface-Review-268647eb4231e853a5b445f499c43665e69ae0e3bb5136fabda0d376c6a28607dff0755b11ba38e2226d66f592feda90a62ef9ef9536ddb438eb8ac86582a1a0",
            "file": "src/app/restaurant/components/reviews/reviews.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\n\nexport interface Review {\n  profile_photo_url: string;\n  author_name: string;\n  relative_time_description: string;\n  rating: number;\n  text: string;\n}\n\n@Component({\n  selector: 'cfs-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.scss']\n})\nexport class ReviewsComponent implements OnInit {\n  @Input() reviews: Array<Review> = [];\n  responsiveOptions: any\n\n  constructor() {\n    this.responsiveOptions = [\n      {\n        breakpoint: '1024px',\n        numVisible: 3,\n        numScroll: 3\n      },\n      {\n        breakpoint: '768px',\n        numVisible: 2,\n        numScroll: 2\n      },\n      {\n        breakpoint: '560px',\n        numVisible: 1,\n        numScroll: 1\n      }\n    ];\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
            "properties": [
                {
                    "name": "author_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "profile_photo_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "relative_time_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "RestaurantService",
            "id": "injectable-RestaurantService-8524a0c5bc9cc7a90da498599a734596e624a657a71de4082dea84d300f039ca0f5f17d8d0661a4e26e3324a02d3323b2469af21cac05243264b6e971ca8513b",
            "file": "src/app/restaurant/service/restaurant.service.ts",
            "properties": [
                {
                    "name": "busy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "finish",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "records",
                    "defaultValue": "{\n    runningStage: 'sublocality_level_2',\n    sublocality_level_2Finish: false,\n    locality2Finish: false,\n    locality1Finish: false,\n    sublocality_level_1Finish: false,\n    routeFinish: false,\n    city: false,\n    state: false,\n    localityFinish: false,\n    postalCodeFinish: false,\n    administrative_area_level_1Finish: false,\n    administrative_area_level_2Finish: false,\n    cityFinish: false,\n    stateFinish: false,\n    url: 'sublocality_level_2',\n    param: null,\n    busy: false,\n    after: 0,\n    finish: false,\n    noOfRecord: 20\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "restaurants",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "_getRestaurants",
                    "args": [
                        {
                            "name": "location",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "location",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addRestaurants",
                    "args": [
                        {
                            "name": "restaurants",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "restaurants",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRestaurants",
                    "args": [
                        {
                            "name": "location",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "location",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRestaurantsBySubLocality",
                    "args": [
                        {
                            "name": "locality2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locality2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../environments/environment';\n\n@Injectable()\nexport class RestaurantService implements OnInit {\n\n  public location: any;\n  private busy: any;\n  private finish: any;\n  public records = {\n    runningStage: 'sublocality_level_2',\n    sublocality_level_2Finish: false,\n    locality2Finish: false,\n    locality1Finish: false,\n    sublocality_level_1Finish: false,\n    routeFinish: false,\n    city: false,\n    state: false,\n    localityFinish: false,\n    postalCodeFinish: false,\n    administrative_area_level_1Finish: false,\n    administrative_area_level_2Finish: false,\n    cityFinish: false,\n    stateFinish: false,\n    url: 'sublocality_level_2',\n    param: null,\n    busy: false,\n    after: 0,\n    finish: false,\n    noOfRecord: 20\n  };\n\n  // public restaurants: Observable<any>;\n  public restaurants: any = [];\n\n  constructor(\n    private httpClient: HttpClient,\n    // private mapService: MapService\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  addRestaurants(restaurants: any): Observable<any> {\n    return this.httpClient.post(environment.restUrl + '/restaurant/addList', restaurants);\n  }\n\n  getRestaurantsBySubLocality(locality2: string): Observable<any> {\n    // https://andycandifood.appspot.com/restaurant/sublocality_level_2/undefined/0/10/\n    return this.httpClient.get(environment.restUrl + '/restaurant/sublocality_level_2/' + locality2 + '/0/20');\n  }\n\n\n  public getRestaurants(location?: any) {\n    // this.location = location;\n    console.log('restaurant.service|getRestaurants|this.location: %o', location);\n\n    if (!location) {\n      return;\n    }\n\n    if (this.busy) {\n      return;\n    }\n    if (this.finish) {\n      return;\n    }\n    this.busy = true;\n\n    if (!this.records.sublocality_level_2Finish) {\n      this.records.runningStage = 'sublocality_level_2';\n      this.records.url = 'sublocality_level_2';\n      this.records.param = location && location.sublocality_level_2 || null;\n    } else if (!this.records.sublocality_level_1Finish) {\n      this.records.runningStage = 'sublocality_level_1';\n      this.records.url = 'sublocality_level_1';\n      this.records.param = location && location.sublocality_level_1 || null;\n    } else if (!this.records.localityFinish) {\n      this.records.runningStage = 'locality';\n      this.records.url = 'locality';\n      this.records.param = location && location.locality || null;\n    } else if (!this.records.locality2Finish) {\n      this.records.runningStage = 'locality2';\n      this.records.url = 'locality2';\n      this.records.param = location && location.locality2 || null;\n    } else if (!this.records.locality1Finish) {\n      this.records.runningStage = 'locality1';\n      this.records.url = 'locality1';\n      this.records.param = location && location.locality1 || null;\n    } else if (!this.records.routeFinish) {\n      this.records.runningStage = 'route';\n      this.records.url = 'route';\n      this.records.param = location && location.route || null;\n    } else if (!this.records.postalCodeFinish) {\n      this.records.runningStage = 'postalCode';\n      this.records.url = 'postalCode';\n      this.records.param = location && location.postal_code || null;\n    } else if (!this.records.cityFinish) {\n      this.records.runningStage = 'city';\n      this.records.url = 'city';\n      this.records.param = location && location.city || null;\n    } else if (!this.records.stateFinish) {\n      this.records.runningStage = 'state';\n      this.records.url = 'state';\n      this.records.param = location && location.state || null;\n    }\n    this._getRestaurants(location);\n    this.busy = false;\n\n  }\n\n  public _getRestaurants(location: any) {\n    const url = environment.restUrl\n      + '/restaurant/' + this.records.url\n      + '/' + this.records.param + '/' + this.records.after + '/' + this.records.noOfRecord;\n    this.httpClient.get(url).subscribe((results: any) => {\n\n      results.map((restaurant: any) => {\n        this.restaurants.push(restaurant);\n      });\n      console.log('restaurants from datastore', results);\n      // this.restaurant.items = _.unique(this.restaurant.items, 'name');\n\n      if (results.length <= 0) {\n        if (this.records.runningStage === 'sublocality_level_2') {\n          this.records.after = 0;\n          this.records.sublocality_level_2Finish = true;\n        } else if (this.records.runningStage === 'sublocality_level_1') {\n          this.records.after = 0;\n          this.records.sublocality_level_1Finish = true;\n        } else if (this.records.runningStage === 'locality') {\n          this.records.after = 0;\n          this.records.localityFinish = true;\n        } else if (this.records.runningStage === 'locality2') {\n          this.records.after = 0;\n          this.records.locality2Finish = true;\n        } else if (this.records.runningStage === 'locality1') {\n          this.records.after = 0;\n          this.records.locality1Finish = true;\n        } else if (this.records.runningStage === 'route') {\n          this.records.after = 0;\n          this.records.routeFinish = true;\n        } else if (this.records.runningStage === 'postalCode') {\n          this.records.after = 0;\n          this.records.postalCodeFinish = true;\n        } else if (this.records.runningStage === 'city') {\n          this.records.after = 0;\n          this.records.cityFinish = true;\n        } else if (this.records.runningStage === 'state') {\n          this.records.after = 0;\n          this.records.stateFinish = true;\n\n          // state finish means we searched all. So finish the search now.\n          this.finish = true;\n        }\n        this.getRestaurants(location);\n      }\n\n      this.records.after += 10;\n      this.busy = false;\n\n    }, (error) => {\n      console.log('unable to get restaurants from datastore| error:%o', error);\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2daf4dd6e08f7070c77f88c789714d02abd1772b9e67693500d235d65e22782ba90e572db5dad054705fb52112f2026c01ca3c091be95d2ca6c217f184898d32",
            "file": "src/app/components/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cfs-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coordinates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Footer",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "gmapElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'gmap'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Header",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "map",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any | undefined",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "middleButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgbModalRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'candifood'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "_getRestaurantsFromMap",
                    "args": [
                        {
                            "name": "location",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 296,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "location",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapReady",
                    "args": [
                        {
                            "name": "map",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "map",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 273,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 234,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openLocationChangeModel",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 277,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, ChangeDetectorRef, Component, Inject, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {RestaurantService} from '../../restaurant/service/restaurant.service';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  AlertService,\n  CfsInfiniteScrollService,\n  ChangeLocationModelComponent,\n  Footer,\n  // google,\n  Header,\n  HeaderService,\n  MapService,\n  User,\n  UserService\n} from '@candypal/website';\nimport {Router} from '@angular/router';\nimport {DOCUMENT} from \"@angular/common\";\nimport {environment} from \"../../../environments/environment\";\n\n\nexport declare var google: any;\n\n@Component({\n  selector: 'cfs-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\n  title = 'candifood';\n  @ViewChild('gmap') gmapElement: any;\n  map: any | undefined;\n  public modalRef: NgbModalRef | undefined;\n  public coordinates: any;\n  public location: any;\n\n  // header links\n  public middleButton: any;\n  public header: Header;\n\n  // footer links\n  public footer: Footer;\n\n  constructor(\n    private restaurantService: RestaurantService,\n    private httpClient: HttpClient,\n    private router: Router,\n    private mapService: MapService,\n    private modalService: NgbModal,\n    private cfsInfiniteScrollService: CfsInfiniteScrollService,\n    private userService: UserService,\n    private headerService: HeaderService,\n    private alertService: AlertService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {\n\n    // Login users when user submit the email and password\n    this.userService.loginSubmittedUserSubject.subscribe((user: User) => {\n      // do the login as well\n      this.userService.login({email: user.email, password: user.password})\n        .subscribe({\n          next: (response: any) => {\n            // navigate by url is used due to the fact that the returnUrl may have optional params which need to be parsed.\n            // same is true for query params\n            if (response !== null) {\n              this.router.navigate([''], {replaceUrl: true});\n            } else {\n              /*this.alertService.alert({\n                title: 'Login failure!',\n                subTitle: 'Unable to login! Please try again or contact support team.',\n                text: response,\n                type: 'danger',\n                closeDelay: 10\n              });*/\n            }\n          },\n          error: (error: any) => {\n            // mostly this is never execute as error are handled in login service in catchError blocked and converted to obwervable\n            console.log('LoginComponent|login|error:%o', error);\n          }\n        });\n    });\n\n    // Subscribe to the login\n    this.userService.authorizedUserSubject.subscribe({\n      next: (user: any) => {\n\n        console.log('AppComponent|userservice.userSubject called|user:%0', user);\n        if (user === null) {\n          // logout condition\n          this.headerService.changeRightLink([\n            {label: 'login', url: '/login'},\n          ]);\n        } else if (!user.status || user.status === 200) {\n          // login condition\n          this.headerService.changeRightLink([\n            {label: 'profile', url: '/profile'},\n          ]);\n\n        } else if (user.status === 'login_failure' || user.status !== 200) {\n          // login failure\n          this.alertService.alert({\n            title: 'Login failure!',\n            subTitle: 'Unable to login! Please try again or contact support team.',\n            text: user,\n            type: 'danger',\n            closeDelay: 30\n          });\n        }\n      }\n    });\n\n    this.header = {\n      navbarToggleExternalContent: {\n        header: 'New promotion',\n        content: 'Order from any restaurant and tell men about Candyfood to get 5% discount',\n        style: {\n          'color': '#ff00ff',\n          'border': '1px solid red'\n        }\n      },\n      brand: {\n        label: 'candifood',\n        url: '/',\n        brandImage: {\n          logo: {\n            imageInAsset: 'candilogo_icon32x32.png',\n            style: {\n              width: '30px',\n              height: '30px'\n            }\n          },\n          style: {\n            'padding-top': '21px'\n          }\n        },\n        style: {\n          'color': '#ffffff',\n          'text-decoration': 'none'\n        }\n      },\n      links: {\n        rightLinks: [\n          {label: 'login', url: '/login'},\n        ],\n        leftLinks: [],\n        style: {\n          'background-color': '#ec7a39',\n          'color': '#f6f6f6',\n          'text-decoration': 'none',\n          'a:link': {\n            'color': '#3eff77'\n          },\n          'a:visited': {\n            'color': '#ff9d19'\n          },\n          'a:hover': {\n            'color': '#fe4d0e'\n          },\n          'a:active': {\n            'color': '#ec7a39'\n          }\n        }\n      },\n      middleButton: {\n        display: true,\n        label: 'finding your location...',\n        loading: true,\n        style: {\n          'background-color': '#ec9a0a',\n          'color': '#ffffff'\n        }\n      },\n      style: {\n        'background-color': '#ec7a39'\n      }\n    };\n\n    this.headerService.header.next(this.header);\n\n    this.footer = {\n      displayTopSection: true,\n      social: {\n        facebook: 'http://www.facebook.com',\n        googlePlus: 'http://www.plus.google.com',\n        twitter: 'http://www.twitter.com',\n        linkedIn: 'http://www.linkedin.com',\n      },\n      copyright: {\n        year: 2018,\n        label: 'candifood team',\n        url: 'https://www.candifood.com'\n      },\n      contact: {\n        name: 'Aniruddha Das',\n        email: 'candifoodindia@gmail.com',\n        phone: '+1 415 650 9102',\n        fax: '+x xxx xxx xxxx'\n      },\n      message: {\n        heading: 'All your eating solution',\n        desc: 'What we eat, it makes a difference in our life. Healthy food does not always comes with good test.' +\n          'We are here to help you to be health as well as take care of your test. Just let us know you.'\n      },\n      columnOneLinks: [\n        {label: 'login', url: '/login', hidden: false},\n        {label: 'Privacy', url: '/privacy', hidden: false}\n      ],\n      columnTwoLinks: [\n        {label: 'profile', url: '/profile', hidden: false}\n      ],\n      style: {\n        'background-color': '#7a690b',\n        'color': '#f99d00',\n        'a:link': {\n          'color': '#ffc11a'\n        },\n        'a:visited': {\n          'color': '#16d3ff'\n        },\n        'a:hover': {\n          'color': '#fbfe11'\n        },\n        'a:active': {\n          'color': '#d0eccb'\n        }\n      }\n    };\n\n  }\n\n\n  ngOnInit() {\n\n    // Load the google map service and get address\n    const url = 'https://maps.googleapis.com/maps/api/js?key=' + environment.mapApiKey + '&libraries=places';\n    // &callback=initMap';\n    this.mapService.loadGoogleMapAndGetAddress(url).subscribe({\n      next: (location: any) => {\n        this.header.middleButton = {\n          display: true,\n          label: location.formatted_address,\n          loading: false\n        };\n        // this.changeDetectorRef.detectChanges();\n        this._getRestaurantsFromMap(location);\n      },\n      error: (error: any) => {\n        this.header.middleButton = {\n          display: true,\n          label: '[ERR] Select location here.',\n          loading: false\n        };\n      }\n    });\n\n\n    // loading restaurant on change of address\n    this.mapService.locationBehaviorSubject.subscribe((location: any) => {\n      this.location = location;\n      this.restaurantService.restaurants = [];\n      this._getRestaurantsFromMap(location);\n    });\n\n    // loading restaurants on autoscroll\n    this.cfsInfiniteScrollService.scrolledBehaviorSubject.subscribe((position: any) => {\n      this.restaurantService.getRestaurants(this.location);\n    });\n\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  openLocationChangeModel(event: any) {\n    this.modalRef = this.modalService.open(ChangeLocationModelComponent, {windowClass: 'location-change-modal'});\n    this.modalRef.componentInstance.input = this.location;\n    this.modalRef.componentInstance.output.subscribe((location: any) => {\n      this.location = location;\n      const address: string = location.formatted_address || 'Did not find';\n      // @ts-ignore\n      this.header.middleButton.label = address;\n      // @ts-ignore\n      this.modalRef.componentInstance.input = this.location;\n      this.mapService.locationBehaviorSubject.next(location);\n    });\n  }\n\n  mapReady(map: any) {\n    console.log('google map is ready| map object: %o', map);\n    this.mapService.map = map;\n  }\n\n  _getRestaurantsFromMap(location: any): void {\n    this.mapService.getRestaurantsFromGoogleMap(location).subscribe((restaurants: any) => {\n      console.log('restaurants from map', restaurants);\n      this.restaurantService.restaurants = [...restaurants];\n      const request = {\n        location: [location],\n        restaurant: restaurants\n      };\n      this.restaurantService.addRestaurants(request).subscribe(function (results) {\n      }, function (error) {\n        console.log('Error while storing fetched restaurants from google map! error: %o ', error);\n      });\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "restaurantService",
                        "type": "RestaurantService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mapService",
                        "type": "MapService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cfsInfiniteScrollService",
                        "type": "CfsInfiniteScrollService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "restaurantService",
                        "type": "RestaurantService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mapService",
                        "type": "MapService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cfsInfiniteScrollService",
                        "type": "CfsInfiniteScrollService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<cfs-header\n  [middleButton]=\"middleButton\"\n  [header]=\"header\"\n  (middleButtonClick)=\"openLocationChangeModel($event)\">\n</cfs-header>\n\n<cfs-alerts></cfs-alerts>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n<cfs-footer\n  [footer]=\"footer\">\n</cfs-footer>\n\n\n<div id=\"map\" style=\"width:100%; height:500px\"></div>\n<!--<div #gmap style=\"width:100%;height:400px\"></div>-->\n<!--<google-map></google-map>-->\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a53fd738b978780d39fb5fcc9ae4cfe0088e57a1f6ce674862d57dab9192140bd1c05548a9910db0469a431142886e658ff2e761f15781b2ad430e58d64724d0",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 786,
                            "end": 799,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 330,
                            "tagName": {
                                "pos": 787,
                                "end": 795,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 34,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 50
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-3d494fd89671305c6be07de00e019efdf08f2e36c2169e5fb75a5acdb2841da927e3ef3cbd21cc18f478373a784b1fb90e8b63b9df4b3498a75b652bd9c37b38",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-243cecba36b236fb3420de9fef86e11d72cb7878dd022313a4d61ec851bc1e57cbd75193b7ea37237a4299a22811ee7e9a26c573fc66a9ed168828153d9f3194",
            "file": "src/app/home/components/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cfs-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Subscription>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HeaderService} from '@candypal/website';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'cfs-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(headerService: HeaderService) {\n    this.subscriptions.push(headerService.headerChanged.asObservable().subscribe((data: any) => {\n      console.log('header changed with data: %o', data);\n    }));\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach( (subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div>\n  <cfs-display-restaurant></cfs-display-restaurant>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-badb6d8cee577661da79ba82ad8f599604afd40fa34e36c7b88d71d77a4fbc7184228cba2f0d73e255d0b7bc51c4c7a8e7b0128b3624aeb0255abab9030fa59a",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PhotosComponent",
            "id": "component-PhotosComponent-2c7cc062020292cd70e2a5e9e9ee38ddf29a6afb5d36c0cc9af968446298c5994b8a11b6b70e8bb4ea7eb4ca0714ee495df142abca05949a06e8f81730150daa",
            "file": "src/app/restaurant/components/photos/photos.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "NgbCarousel"
                }
            ],
            "selector": "cfs-photos",
            "styleUrls": [
                "./photos.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./photos.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "photos",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Array<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ngbCarousel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgbCarousel",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "responsiveOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "showNavigationArrows",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "showNavigationIndicators",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {NgbCarousel} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'cfs-photos',\n  templateUrl: './photos.component.html',\n  styleUrls: ['./photos.component.scss'],\n  providers: [NgbCarousel]\n})\nexport class PhotosComponent implements OnInit {\n  @Input() photos: Array<any> = [];\n  showNavigationArrows = false;\n  showNavigationIndicators = false;\n  responsiveOptions: any;\n\n  constructor(public ngbCarousel: NgbCarousel) {\n    this.responsiveOptions = [\n      {\n        breakpoint: '1024px',\n        numVisible: 3,\n        numScroll: 3\n      },\n      {\n        breakpoint: '768px',\n        numVisible: 2,\n        numScroll: 2\n      },\n      {\n        breakpoint: '560px',\n        numVisible: 1,\n        numScroll: 1\n      }\n    ];\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  .row {\n    .restaurant-photos {\n      width: 250px;\n      height: 200px;\n      margin: 0;\n      padding: 0;\n    }\n  }\n  .card {\n    .card-body {\n      .row {\n        .col {\n          margin: 0;\n          padding: 0;\n        }\n      }\n    }\n  }\n}\n\n\n\n\n@media (min-width: 768px) {\n\n  /* show 3 items */\n  .carousel-inner .active,\n  .carousel-inner .active + .carousel-item,\n  .carousel-inner .active + .carousel-item + .carousel-item,\n  .carousel-inner .active + .carousel-item + .carousel-item + .carousel-item  {\n    display: block;\n  }\n\n  .carousel-inner .carousel-item.active:not(.carousel-item-right):not(.carousel-item-left),\n  .carousel-inner .carousel-item.active:not(.carousel-item-right):not(.carousel-item-left) + .carousel-item,\n  .carousel-inner .carousel-item.active:not(.carousel-item-right):not(.carousel-item-left) + .carousel-item + .carousel-item,\n  .carousel-inner .carousel-item.active:not(.carousel-item-right):not(.carousel-item-left) + .carousel-item + .carousel-item + .carousel-item {\n    transition: none;\n  }\n\n  .carousel-inner .carousel-item-next,\n  .carousel-inner .carousel-item-prev {\n    position: relative;\n    transform: translate3d(0, 0, 0);\n  }\n\n  .carousel-inner .active.carousel-item + .carousel-item + .carousel-item + .carousel-item + .carousel-item {\n    position: absolute;\n    top: 0;\n    right: -25%;\n    z-index: -1;\n    display: block;\n    visibility: visible;\n  }\n\n  /* left or forward direction */\n  .active.carousel-item-left + .carousel-item-next.carousel-item-left,\n  .carousel-item-next.carousel-item-left + .carousel-item,\n  .carousel-item-next.carousel-item-left + .carousel-item + .carousel-item,\n  .carousel-item-next.carousel-item-left + .carousel-item + .carousel-item + .carousel-item,\n  .carousel-item-next.carousel-item-left + .carousel-item + .carousel-item + .carousel-item + .carousel-item {\n    position: relative;\n    transform: translate3d(-100%, 0, 0);\n    visibility: visible;\n  }\n\n  /* farthest right hidden item must be abso position for animations */\n  .carousel-inner .carousel-item-prev.carousel-item-right {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n    display: block;\n    visibility: visible;\n  }\n\n  /* right or prev direction */\n  .active.carousel-item-right + .carousel-item-prev.carousel-item-right,\n  .carousel-item-prev.carousel-item-right + .carousel-item,\n  .carousel-item-prev.carousel-item-right + .carousel-item + .carousel-item,\n  .carousel-item-prev.carousel-item-right + .carousel-item + .carousel-item + .carousel-item,\n  .carousel-item-prev.carousel-item-right + .carousel-item + .carousel-item + .carousel-item + .carousel-item {\n    position: relative;\n    transform: translate3d(100%, 0, 0);\n    visibility: visible;\n    display: block;\n    visibility: visible;\n  }\n\n}\n\n/* Bootstrap Lightbox using Modal */\n\n#profile-grid { overflow: auto; white-space: normal; }\n#profile-grid .profile { padding-bottom: 40px; }\n#profile-grid .panel { padding: 0 }\n#profile-grid .panel-body { padding: 15px }\n#profile-grid .profile-name { font-weight: bold; }\n#profile-grid .thumbnail {margin-bottom:6px;}\n#profile-grid .panel-thumbnail { overflow: hidden; }\n#profile-grid .img-rounded { border-radius: 4px 4px 0 0;}\n",
                    "styleUrl": "./photos.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ngbCarousel",
                        "type": "NgbCarousel",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "ngbCarousel",
                        "type": "NgbCarousel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" *ngIf=\"photos.length > 0\">\n  <h6>Photos</h6>\n\n\n  <p-carousel [value]=\"photos\" [numVisible]=\"5\" [numScroll]=\"1\" [responsiveOptions]=\"responsiveOptions\">\n    <ng-template let-photo pTemplate=\"item\">\n      <img src=\"{{photo.url}}\" class=\"img-fluid rounded\" alt=\"Restaurant photo\">\n    </ng-template>\n  </p-carousel>\n\n\n</div>\n"
        },
        {
            "name": "RestaurantsComponent",
            "id": "component-RestaurantsComponent-7d4741de4ff4004456ac4d509727c6a82e859232102a1498a6cfcece0f49d55b074a3c346006db5fb61e2275921b0f76a14b2cb9d56833f02fbffc046c2093ce",
            "file": "src/app/restaurant/components/restaurants/restaurants.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cfs-display-restaurant",
            "styleUrls": [
                "./restaurants.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./restaurants.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faBeer",
                    "defaultValue": "faBeer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "faBirthdayCake",
                    "defaultValue": "faBirthdayCake",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "faCoffee",
                    "defaultValue": "faCoffee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "faGamepad",
                    "defaultValue": "faGamepad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "faGlassMartini",
                    "defaultValue": "faGlassMartini",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "faMagic",
                    "defaultValue": "faMagic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "faShoppingCart",
                    "defaultValue": "faShoppingCart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "faSquar",
                    "defaultValue": "faSquare",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "faStar",
                    "defaultValue": "faStar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "faStarHalf",
                    "defaultValue": "faStarHalf",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "faTruckMoving",
                    "defaultValue": "faTruckMoving",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "faUtensils",
                    "defaultValue": "faUtensils",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "faWineGlass",
                    "defaultValue": "faWineGlass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "ngbCarouselConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgbCarouselConfig",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "restaurantService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RestaurantService",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getGoogleMapPhotos",
                    "args": [
                        {
                            "name": "googlePlaceId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "googlePlaceId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onScroll",
                    "args": [
                        {
                            "name": "event",
                            "type": "IInfiniteScrollEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IInfiniteScrollEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {ChangeDetectorRef, Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {RestaurantService} from '../../service/restaurant.service';\nimport {\n  faBeer,\n  faBirthdayCake,\n  faCoffee,\n  faGamepad,\n  faGlassMartini,\n  faMagic,\n  faShoppingCart,\n  faSquare,\n  faStar,\n  faStarHalf,\n  faTruckMoving,\n  faUtensils,\n  faWineGlass\n} from '@fortawesome/free-solid-svg-icons';\nimport {CfsInfiniteScrollService, MapService} from '@candypal/website';\nimport {NgbCarouselConfig} from '@ng-bootstrap/ng-bootstrap';\nimport {IInfiniteScrollEvent} from \"ngx-infinite-scroll\";\n\n@Component({\n  selector: 'cfs-display-restaurant',\n  templateUrl: './restaurants.component.html',\n  styleUrls: ['./restaurants.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class RestaurantsComponent implements OnInit {\n  faUtensils = faUtensils;\n  faGlassMartini = faGlassMartini;\n  faTruckMoving = faTruckMoving;\n  faCoffee = faCoffee;\n  faWineGlass = faWineGlass;\n  faShoppingCart = faShoppingCart;\n  faGamepad = faGamepad;\n  faBirthdayCake = faBirthdayCake;\n  faBeer = faBeer;\n  faStar = faStar;\n  faStarHalf = faStarHalf;\n  faMagic = faMagic;\n  faSquar = faSquare;\n\n  constructor(\n    public restaurantService: RestaurantService,\n    private mapService: MapService,\n    private changeDetectorRef: ChangeDetectorRef,\n    public ngbCarouselConfig: NgbCarouselConfig,\n    private cfsInfiniteScrollService: CfsInfiniteScrollService\n  ) {\n\n    // ngbCarouselConfig.interval = 3000;\n    // ngbCarouselConfig.wrap = true;\n  }\n\n  ngOnInit() {\n\n  }\n\n  onScroll(event: IInfiniteScrollEvent) {\n    console.log(event);\n    this.cfsInfiniteScrollService.scrolledBehaviorSubject.next(event);\n  }\n\n  getGoogleMapPhotos(googlePlaceId: string, index: number) {\n    this.mapService.getGoogleMapPlaceDetail(googlePlaceId).subscribe((place: any) => {\n      place.photos = place.photos.map((photo: any) => {\n        photo.url = photo.getUrl({'maxWidth': 250, 'maxHeight': 200});\n        return photo;\n      });\n      this.restaurantService.restaurants[index].place = place;\n      this.changeDetectorRef.detectChanges();\n      console.log(this.restaurantService.restaurants[index]);\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".list-restaurant {\n  height: 100%;\n  margin: 3px 0;\n  .card-body {\n    background-color: #F5F5F5;\n    .row {\n      .utensils {\n        width: 200px;\n        height: 200px;\n      }\n      .restaurant-details {\n        p {\n          margin-bottom: 0;\n        }\n      }\n      button {\n        margin-right: 3px;\n      }\n    }\n  }\n  .card {\n    margin-bottom: 5px;\n  }\n}\n\n.star {\n  position: relative;\n  display: inline-block;\n  font-size: 15px;\n  color: #d3d3d3;\n}\n\n.full {\n  color: red;\n}\n\n.half {\n  position: absolute;\n  display: inline-block;\n  overflow: hidden;\n  color: red;\n}\n\n.search-results {\n  height: 20rem;\n  overflow: scroll;\n}\n",
                    "styleUrl": "./restaurants.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "restaurantService",
                        "type": "RestaurantService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mapService",
                        "type": "MapService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngbCarouselConfig",
                        "type": "NgbCarouselConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cfsInfiniteScrollService",
                        "type": "CfsInfiniteScrollService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "restaurantService",
                        "type": "RestaurantService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mapService",
                        "type": "MapService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngbCarouselConfig",
                        "type": "NgbCarouselConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cfsInfiniteScrollService",
                        "type": "CfsInfiniteScrollService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"list-restaurant\"\n     infiniteScroll\n     [infiniteScrollDistance]=\"2\"\n     [immediateCheck]=\"true\"\n     (scrolled)=\"onScroll($event)\">\n\n  <cfs-content-loading [hidden]=\"restaurantService.restaurants.length > 0\" [repeats]=\"5\"></cfs-content-loading>\n\n  <div class=\"card\" *ngFor=\"let restaurant of restaurantService.restaurants; let i = index;\">\n\n    <div class=\"card-body\">\n\n      <div class=\"row d-flex justify-content-between\">\n\n        <div class=\"col-10\">\n          <div class=\"row\">\n            <div class=\"col-md-1\">\n              <fa-icon [icon]=\"faUtensils\" [size]=\"'5x'\" [styles]=\"{color:'#F36F24'}\"></fa-icon>\n            </div>\n\n            <div class=\"col-md-7 ng-scope restaurant-details\">\n              <h4 class=\"ng-binding\">{{restaurant.name}}</h4>\n              <p class=\"ng-binding\">{{restaurant.address}}, {{restaurant.city}}</p>\n              <p class=\"card-text\">Time: {{restaurant.openTime}} - {{restaurant.closeTime}}</p>\n              <ngb-rating [(rate)]=\"restaurant.rating\" [starTemplate]=\"restRating\" [readonly]=\"true\"\n                          [max]=\"5\"></ngb-rating>\n            </div>\n\n          </div>\n\n          <div class=\"row\" *ngIf=\"(restaurant && restaurant.place)\">\n            <div class=\"col\">\n              <p-tag class=\"m2\" value=\"{{restaurant.place && restaurant.place.phone}}\" icon=\"pi pi-phone\"></p-tag>\n              <a class=\"m-2\" target=\"_blank\" href=\"{{restaurant.place && restaurant.place.website}}\">\n                <p-tag value=\"Website\" icon=\"pi pi-globe\"></p-tag>\n              </a>\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"col-2 d-flex justify-content-end\">\n\n          <!--// These are default types, so not provided icons for them-->\n          <!--<fa-icon [icon]=\"faGlassMartini\" [size]=\"'2x'\" *ngIf=\"restaurant.types && restaurant.types.includes('food')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faGlassMartini\" [size]=\"'2x'\" *ngIf=\"restaurant.types && restaurant.types.includes('restaurant')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faGlassMartini\" [size]=\"'2x'\" *ngIf=\"restaurant.types && restaurant.types.includes('establishment')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faGlassMartini\" [size]=\"'2x'\" *ngIf=\"restaurant.types && restaurant.types.includes('point-of-interest')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>-->\n\n          <fa-icon [icon]=\"faBeer\" [size]=\"'2x'\"\n                   *ngIf=\"restaurant.types && restaurant.types.includes('bar')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faGlassMartini\" [size]=\"'2x'\"\n                   *ngIf=\"restaurant.types && restaurant.types.includes('night_club')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faTruckMoving\" [size]=\"'2x'\"\n                   *ngIf=\"restaurant.types && restaurant.types.includes('shopping-cart')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faTruckMoving\" [size]=\"'2x'\"\n                   *ngIf=\"restaurant.types && restaurant.types.includes('meal_delivery')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faCoffee\" [size]=\"'2x'\"\n                   *ngIf=\"restaurant.types && restaurant.types.includes('cafe')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faGamepad\" [size]=\"'2x'\"\n                   *ngIf=\"restaurant.types && restaurant.types.includes('bowling_alley')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faBirthdayCake\" [size]=\"'2x'\"\n                   *ngIf=\"restaurant.types && restaurant.types.includes('bakery')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faShoppingCart\" [size]=\"'2x'\"\n                   *ngIf=\"restaurant.types && restaurant.types.includes('store')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n          <fa-icon [icon]=\"faShoppingCart\" [size]=\"'2x'\"\n                   *ngIf=\"restaurant.types && restaurant.types.includes('home_goods_store')\"\n                   [styles]=\"{color:'#F36F24'}\"></fa-icon>\n        </div>\n      </div>\n\n      <cfs-photos *ngIf=\"(restaurant && restaurant.place)\" [photos]=\"restaurant.place.photos\"></cfs-photos>\n      <cfs-reviews *ngIf=\"(restaurant && restaurant.place)\" [reviews]=\"restaurant.place.reviews\"></cfs-reviews>\n\n      <div class=\"d-flex\" style=\"align-items: stretch;\">\n        <button class=\"btn btn-success m-2\" (click)=\"getGoogleMapPhotos(restaurant.googlePlaceId, i)\">More details</button>\n        <button class=\"btn btn-warning m-2\" (click)=\"getGoogleMapPhotos(restaurant.googlePlaceId, i)\">Order</button>\n        <button class=\"btn btn-failure m-2\" (click)=\"getGoogleMapPhotos(restaurant.googlePlaceId, i)\">Call</button>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n\n<ng-template #restRating let-fill=\"fill\">\n  <span class=\"star\" [class.full]=\"fill === 100\">\n    <span class=\"half\" [style.width.%]=\"fill\">&#9734;</span>&#9733;\n  </span>\n</ng-template>\n"
        },
        {
            "name": "ReviewsComponent",
            "id": "component-ReviewsComponent-268647eb4231e853a5b445f499c43665e69ae0e3bb5136fabda0d376c6a28607dff0755b11ba38e2226d66f592feda90a62ef9ef9536ddb438eb8ac86582a1a0",
            "file": "src/app/restaurant/components/reviews/reviews.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cfs-reviews",
            "styleUrls": [
                "./reviews.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reviews.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "reviews",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Array<Review>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "responsiveOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\n\nexport interface Review {\n  profile_photo_url: string;\n  author_name: string;\n  relative_time_description: string;\n  rating: number;\n  text: string;\n}\n\n@Component({\n  selector: 'cfs-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.scss']\n})\nexport class ReviewsComponent implements OnInit {\n  @Input() reviews: Array<Review> = [];\n  responsiveOptions: any\n\n  constructor() {\n    this.responsiveOptions = [\n      {\n        breakpoint: '1024px',\n        numVisible: 3,\n        numScroll: 3\n      },\n      {\n        breakpoint: '768px',\n        numVisible: 2,\n        numScroll: 2\n      },\n      {\n        breakpoint: '560px',\n        numVisible: 1,\n        numScroll: 1\n      }\n    ];\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  .card {\n    margin-right: 3px;\n    margin-left: 3px;\n  }\n  .full {\n    color: #ff9e12;\n  }\n\n  .half {\n    position: absolute;\n    display: inline-block;\n    overflow: hidden;\n    color: #ff9e12;\n  }\n}\n",
                    "styleUrl": "./reviews.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" *ngIf=\"reviews.length > 0\">\n  <h6>Reviews</h6>\n\n\n  <p-carousel [value]=\"reviews\" [numVisible]=\"5\" [numScroll]=\"1\" [responsiveOptions]=\"responsiveOptions\">\n    <ng-template let-review pTemplate=\"item\">\n      <img class=\"card-img-top\" [src]=\"review.profile_photo_url\" alt=\"{{review.author_name}}\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">{{review.author_name}}</h5>\n        <ngb-rating [(rate)]=\"review.rating\" [starTemplate]=\"reviewRating\" [readonly]=\"true\" [max]=\"5\"></ngb-rating>\n        <p class=\"card-text\">{{review.relative_time_description}}</p>\n        <p class=\"card-text\">\n          <cfs-read-more\n            [text]=\"review.text\"\n            [maxLength]=\"100\"\n            [showLinkLabel]=\"'...read more'\"\n            [hideLink]=\"false\">\n          </cfs-read-more>\n        </p>\n      </div>\n    </ng-template>\n  </p-carousel>\n\n</div>\n\n<ng-template #reviewRating let-fill=\"fill\">\n  <span class=\"star\" [class.full]=\"fill === 100\">\n    <span class=\"half\" [style.width.%]=\"fill\">&#9734;</span>&#9733;\n  </span>\n</ng-template>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-8c7270c38e028b8f8a5db3fd63d40277087eb15e16765e64771f842a41e47306d39be2a15f11b237fa386ca3dbbfedc68d46eaa0f88f55cb14a50a00ee390939",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './components/app/app.component';\nimport {WebsiteModule} from \"@candypal/website\";\nimport {HomeModule} from \"./home/home.module\";\nimport {RestaurantModule} from \"./restaurant/restaurant.module\";\nimport {NgbRatingModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {environment} from \"../environments/environment\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    WebsiteModule.forRoot({\n      restUrl: environment.restUrl,\n      loginUrl: environment.restUrl + '/authentication/login',\n      alertDelayInSeconds: 7\n    }),\n    HomeModule,\n    RestaurantModule,\n    NgbRatingModule,\n    FontAwesomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "HomeModule"
                        },
                        {
                            "name": "RestaurantModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-ca40a5f342ba01adaaccfc94a81c7856a3cf67c72c9ca0eedf8565f081fe15471efb0cf0538ec92a6eb13530216e8db5ca3e6670e210e3590f3474568746a08a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from \"./home/components/home/home.component\";\nimport {RestaurantsComponent} from \"./restaurant/components/restaurants/restaurants.component\";\nimport {AuthGuardService, LoginComponent, PrivacyComponent, ProfileComponent} from \"@candypal/website\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'restaurant',\n    component: RestaurantsComponent\n  },\n  {\n    path: 'privacy',\n    component: PrivacyComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [\n      AuthGuardService\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-b076967315d904908c76dfc0881bf3989cefb23bf6e9f01534fb1b06a9f8992222925f00190b69b3aac61109f85734da0f74d8c98b536f894e8d39120dd69277",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HomeComponent} from './components/home/home.component';\nimport {RestaurantModule} from '../restaurant/restaurant.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RestaurantModule\n  ],\n  declarations: [\n    HomeComponent\n  ],\n  exports: [\n    HomeComponent\n  ]\n})\nexport class HomeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RestaurantModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RestaurantModule",
            "id": "module-RestaurantModule-6ba7929989c36ca21112f8a2f248c0b989f3f40733a2bbdc80c4c8039587ab4cd23016cea7d61c09577414d5cc6e3b1f51f2732548e1e42ccfe65473beaf8def",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/restaurant/restaurant.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RestaurantsComponent} from './components/restaurants/restaurants.component';\nimport {RestaurantService} from './service/restaurant.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {InfiniteScrollModule} from 'ngx-infinite-scroll';\nimport {ReviewsComponent} from './components/reviews/reviews.component';\nimport {PhotosComponent} from './components/photos/photos.component';\nimport {WebsiteModule} from '@candypal/website';\nimport {CarouselModule} from \"primeng/carousel\";\nimport {TagModule} from \"primeng/tag\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    CarouselModule,\n    NgbModule,\n    InfiniteScrollModule,\n    WebsiteModule,\n    TagModule\n  ],\n  declarations: [\n    RestaurantsComponent,\n    ReviewsComponent,\n    PhotosComponent,\n  ],\n  providers: [\n    RestaurantService\n  ],\n  exports: [\n    RestaurantsComponent,\n    ReviewsComponent,\n    PhotosComponent,\n  ]\n})\nexport class RestaurantModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "RestaurantService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PhotosComponent"
                        },
                        {
                            "name": "RestaurantsComponent"
                        },
                        {
                            "name": "ReviewsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PhotosComponent"
                        },
                        {
                            "name": "RestaurantsComponent"
                        },
                        {
                            "name": "ReviewsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  restUrl: 'https://andycandifood.appspot.com',\n  trackAnalytics: true,\n  useBasicAuth: false,\n  alertDelayInSeconds: 7,\n  mapApiKey: 'AIzaSyBMIoVYsqVdrlm_IwdKSkLEhpMH7JtEIT8',\n  'ga': {\n    'key': 'tempPwd',\n    'iv': 'XXXX',\n    'trackingId': 'UA-115890187-1'\n  }\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  // restUrl: 'http://localhost:8080',\n  // restUrl: 'https://andycandifood.appspot.com',\n  restUrl: 'https://gauramargrest.appspot.com',\n  trackAnalytics: true,\n  useBasicAuth: false,\n  alertDelayInSeconds: 7,\n  mapApiKey: 'AIzaSyBMIoVYsqVdrlm_IwdKSkLEhpMH7JtEIT8',\n  'ga': {\n    'key': 'tempPwd',\n    'iv': 'XXXX',\n    'trackingId': 'UA-115890187-1'\n  }\n}"
            },
            {
                "name": "google",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/app/app.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = await canvas.getByRole('button', {\n      name: /Log in/i,\n    });\n    await userEvent.click(loginButton);\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Button>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Header>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/angular/writing-docs/autodocs\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Page>",
                "defaultValue": "{\n  title: 'Example/Page',\n  component: Page,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [Button, Header],\n      imports: [CommonModule],\n    }),\n  ],\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Button>",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Header>",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Page>",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  restUrl: 'https://andycandifood.appspot.com',\n  trackAnalytics: true,\n  useBasicAuth: false,\n  alertDelayInSeconds: 7,\n  mapApiKey: 'AIzaSyBMIoVYsqVdrlm_IwdKSkLEhpMH7JtEIT8',\n  'ga': {\n    'key': 'tempPwd',\n    'iv': 'XXXX',\n    'trackingId': 'UA-115890187-1'\n  }\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  // restUrl: 'http://localhost:8080',\n  // restUrl: 'https://andycandifood.appspot.com',\n  restUrl: 'https://gauramargrest.appspot.com',\n  trackAnalytics: true,\n  useBasicAuth: false,\n  alertDelayInSeconds: 7,\n  mapApiKey: 'AIzaSyBMIoVYsqVdrlm_IwdKSkLEhpMH7JtEIT8',\n  'ga': {\n    'key': 'tempPwd',\n    'iv': 'XXXX',\n    'trackingId': 'UA-115890187-1'\n  }\n}"
                }
            ],
            "src/app/components/app/app.component.ts": [
                {
                    "name": "google",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/app/app.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Button>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Header>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/angular/writing-docs/autodocs\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = await canvas.getByRole('button', {\n      name: /Log in/i,\n    });\n    await userEvent.click(loginButton);\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Page>",
                    "defaultValue": "{\n  title: 'Example/Page',\n  component: Page,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [Button, Header],\n      imports: [CommonModule],\n    }),\n  ],\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/Button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Button>",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Header>",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Page>",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "restaurant",
                        "component": "RestaurantsComponent"
                    },
                    {
                        "path": "privacy",
                        "component": "PrivacyComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "profile",
                        "component": "ProfileComponent",
                        "canActivate": [
                            "AuthGuardService"
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/app.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "google",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/home/components/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant/components/photos/photos.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhotosComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant/components/restaurants/restaurants.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RestaurantsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant/components/reviews/reviews.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReviewsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant/components/reviews/reviews.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Review",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/restaurant/service/restaurant.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RestaurantService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}